DIGIKAM - MANAGE YOUR PHOTOGRAPHS LIKE A PROFESSIONAL WITH THE POWER OF OPEN SOURCE

-- ABOUT -------------------------------------------------------------

 digiKam is an easy to use and powerful digital photo management
 application, which makes importing, organizing and manipulating
 digital photos a "snap".  An easy to use interface is provided
 to connect to your digital camera, preview the images and download
 and/or delete them.

 The digiKam built-in image editor makes the common photo correction
 a simple task. The image editor is extensible via plugins and,
 since the digikamimageplugins project has been merged to digiKam core
 since release 0.9.2, all useful image editor plugins are available
 in the base installation.

 digiKam can also make use of the KIPI image handling plugins to
 extend its capabilities even further for photo manipulations,
 import and export, etc. The kipi-plugins package contains many
 very useful extensions.

 digiKam is based in part on the work of the Independent JPEG Group.


-- AUTHORS ------------------------------------------------------------

See AUTHORS file for details.


-- RELATED URLS -------------------------------------------------------

http://www.digikam.org

-- CONTACT ------------------------------------------------------------

If you have questions, comments, suggestions to make do email at :

digikam-users@kde.org

If you want contribute to digiKam developments do email at :

digikam-devel@kde.org

IRC channel from irc.freenode.org server: #digikam

-- BUG REPORTS --------------------------------------------------------

IMPORTANT : the bug reports and wishlist entries are hosted by the KDE bug report
system which can be reached from the standard KDE help menu of digiKam.
A mail will automatically be sent to the digiKam development mailing list.
There is no need to contact directly the digiKam mailing list for a bug report
or a devel wish.

The current bugs and devel wishes reported to the bugzilla servers can be seen at these urls :

* digiKam:

http://bugs.kde.org/buglist.cgi?product=digikam&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED

* Kipi-plugins:

http://bugs.kde.org/buglist.cgi?product=kipiplugins&bug_status=UNCONFIRMED&bug_status=NEW&bug_status=ASSIGNED&bug_status=REOPENED

Extra Bugzilla servers for shared libs used by digiKam :

* GPhoto2 library:

http://gphoto.org/bugs

* Exiv2 library:

http://dev.robotbattle.com/bugs/main_page.php


-- DEPENDENCIES -------------------------------------------------------

See the complete list of dependencies at this url:

https://quickgit.kde.org/?p=digikam-software-compilation.git&a=blob&f=DEPENDENCIES 

CMake compilation options to custom digiKam:

Use CMake "-DENABLE_KFILEMETADATASUPPORT=on"  flag to compile digiKam with KDE files indexer support                                 (disabled by default).
Use CMake "-DENABLE_AKONADICONTACTSUPPORT=on" flag to compile digiKam with KDE Mail Contacts support                                 (disabled by default).
Use CMake "-DENABLE_DBUS=off"                 flag to compile digiKam without DBus support                                           (enabled by default - for Linux desktop only).
Use CMake "-DENABLE_MEDIAPLAYER=on"           flag to compile digiKam with QtMultimedia support                                      (disabled by default).
Use Cmake "-DENABLE_APPSTYLES=on"             flag to compile digiKam with widget application style support                          (disabled by default).
Use CMake "-DENABLE_OPENCV3=on"               flag to compile digiKam source code using OpenCV3 instead OpenCV2                      (disabled by default).
                                              OpenCV3 support needs extra contrib modules package, especially 'face'
                                              and 'legacy' components.

Mysql support options (experimental):

Use CMake "-DENABLE_MYSQLSUPPORT=on"          flag to compile digiKam with MysSql support                                            (disabled by default).
Use CMake "-DENABLE_INTERNALMYSQL=on"         flag to compile digiKam with internal MySQL server                                     (disabled by default).

Debug options:

Use CMake "-DBUILD_TESTING=on"                flag to compile digiKam source code unit tests                                         (disabled by default).

-- INSTALLATION --------------------------------------------------------

In order to compile, just use something like that:

# export VERBOSE=1
# export QTDIR=/usr/lib/qt5
# export PATH=$QTDIR/bin:$PATH
# cmake .
# make
# sudo make install

Usual CMake options :

-DCMAKE_INSTALL_PREFIX : decide where the program will be install on your computer.
-DCMAKE_BUILD_TYPE     : decide which type of build you want. You can chose between:
                         "debugfull".     : for hacking. Include all debug information.
                         "debug".
                         "profile".
                         "relwithdebinfo" : default. use gcc -O2 -g options.
                         "release"        : generate stripped and optimized bin files. For packaging.

Compared to old autoconf options:

"cmake . -DCMAKE_BUILD_TYPE=debugfull" is equivalent to "./configure --enable-debug=full"
"cmake . -DCMAKE_INSTALL_PREFIX=/usr"  is equivalent to "./configure --prefix=/usr"

More details can be found at this url: http://techbase.kde.org/Development/Tutorials/CMake#Environment_Variables

Note: To know KDE install path on your computer, use 'kf5-config --prefix' command line like this (with full debug object enabled):

"cmake . -DCMAKE_BUILD_TYPE=debugfull -DCMAKE_INSTALL_PREFIX=`kf5-config --prefix`"

-- DONATE MONEY --------------------------------------------------------

If you love digiKam, you can help developers to buy new photo devices to test
and implement new features. Thanks in advance for your generous donations.

For more information, look at this url : http://www.digikam.org/?q=donation
